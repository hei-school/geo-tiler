openapi: 3.0.3
info:
  title: geo-tiler
  description: geo-tiler
  version: 'latest'
servers:
  - url: 'https://localhost:8080'
paths:
  '/ping':
    get:
      operationId: ping
      tags:
        - Health
      responses:
        200:
          description: pong
          content:
            text/plain:
              schema:
                type: string
                example: pong
  '/tilingJobs':
    post:
      operationId: tileZone
      description: creates a zone tiling job
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateZoneTilingJob"
      responses:
        200:
          description: the created zone tiling job
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ZoneTilingJob"
        '500':
          $ref: '#/components/responses/500'
    get:
      operationId: getTilingJobs
      description: gets a list of all tiling job
      parameters:
        - in: query
          name: page
          schema:
            $ref: "#/components/schemas/Page"
        - in: query
          name: pageSize
          schema:
            $ref: "#/components/schemas/PageSize"
      responses:
        200:
          description: all present jobs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ZoneTilingJob"
        '500':
          $ref: '#/components/responses/500'
components:
  responses:
    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestException'
    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotAuthorizedException'
    404:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResourceNotFoundException'
    429:
      description: Too many requests to the API
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TooManyRequestsException'
    '500':
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InternalServerException'
  schemas:
    Exception:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
    InternalServerException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: InternalServerException
        message: Unexpected error
    BadRequestException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: BadRequestException
        message: Bad request
    NotAuthorizedException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: NotAuthorizedException
        message: Not authorized
    ResourceNotFoundException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: ResourceNotFoundException
        message: Resource of type <T> identified by <I> not found
    TooManyRequestsException:
      allOf:
        - $ref: '#/components/schemas/Exception'
      example:
        type: TooManyRequestsException
        message: Too many requests
    Page:
      type: integer
      description: Start at `1`
    PageSize:
      type: integer
      description: Cannot exceed `500`
    CreateZoneTilingJob:
      type: object
      properties:
        emailReceiver:
          type: string
        zoneName:
          type: string
        geoServerUrl:
          type: string
        geoServerParameter:
          $ref: "#/components/schemas/GeoServerParameter"
        features:
          type: array
          items:
            $ref: "#/components/schemas/Feature"
        zoomLevel:
          type: string
          #documented on
          enum:
            - WORLD_0
            - WORLD_1
            - WORLD_2
            - CONTINENT_0
            - CONTINENT_1
            - COUNTRIES
            - COUNTRY
            - STATES
            - COUNTIES_0
            - COUNTIES_1
            - COUNTY
            - METROPOLITAN_AREA
            - CITIES
            - CITY
            - TOWN
            - NEIGHBORHOOD
            - STREETS
            - CITY_BLOCK
            - BUILDINGS
            - BUILDING
            - HOUSES_0
            - HOUSES_1
            - HOUSES_2
            - HOUSE_PROPERTY
    ZoneTilingJob:
      allOf:
        - $ref: "#/components/schemas/CreateZoneTilingJob"
      properties:
        id:
          type: string


    ###########################################################################################################
    ###  GeoJSON objects. Modified from: https://gist.github.com/bubbobne/fe5f2db65acf039be6a9fd92fc9c7233  ###
    ###########################################################################################################

    GeoServerParameter:
      type: object
      properties:
        service:
          type: string
        request:
          type: string
        layers:
          type: string
        styles:
          type: string
        format:
          type: string
        transparent:
          type: boolean
        version:
          type: string
        width:
          type: integer
        height:
          type: integer
        srs:
          type: string

    Feature:
      type: object
      properties:
        id:
          type: string
        zoom:
          type: integer
        geometry:
          $ref: "#/components/schemas/MultiPolygon"

    Geometry:
      type: object
      required:
        - type
      properties:
        type:
          type: string
          enum:
            - Point
            - LineString
            - Polygon
            - MultiPolygon

    Point2D:
      type: array
      maxItems: 2
      minItems: 2
      items:
        type: number

    Point:
      type: object
      allOf:
        - $ref: "#/definitions/Geometry"
      properties:
        coordinates:
          $ref: '#/definitions/Point2D'

    Polygon:
      type: object
      allOf:
        - $ref: "#/definitions/Geometry"
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              $ref: '#/definitions/Point2D'

    MultiPolygon:
      type: object
      allOf:
        - $ref: "#/definitions/Geometry"
      properties:
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                $ref: '#/definitions/Point2D'
